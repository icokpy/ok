{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
      "ok_env": {
        "type": "string",
        "defaultValue": "dev",
        "allowedValues": [
          "dev",
          "simple",
           "test",
            "staging",
          "prod"        
        ],
        "metadata": {
          "description": "ok.py settings file"
        }
      },
      "dockerRegistryUrl":{
        "defaultValue": "quay.io",
        "type": "string"
      },
      "dockerRegistryUsername":{
        "defaultValue": "",
        "type": "string"
      },
      "dockerRegistryPassword":{
        "defaultValue": "",
        "type": "string"
      },
      "dockerImageName":{
        "defaultValue": "cs61a/ok-server",
        "type": "string"
      },
      "dockerImageTag":{
        "defaultValue": "latest",
        "type": "string"
      },
      "azureAdAppID":{
        "defaultValue":"",
        "type": "string"
      },
      "azureAdAppSecret":{
        "defaultValue":"",
              "type": "string"
      },
      
      "mySqlUsername": {
        "type": "string",
        "minLength": 1,
        "defaultValue" : "mysqladmin",
        "metadata": {
          "description": "MySQL Username"
        }
      },
      "mySqlAdminPassword": {
        "type": "securestring",
        "metadata": {
          "description": "mySQL Admin Password"
        }
      },
      "sendgridAccountName": {
        "type": "string",
        "metadata": {
          "description": "sendgrid account name"
        }
      },
      "sendgridPassword": {
        "type": "string",
        "metadata": {
          "description": "Sendgrid password"
        }
      },
      "SecretKey": {
        "type": "securestring",
        "metadata": {
          "description": "SecretKey"
        }
      },
      "appName": {
        "type": "string",
        "metadata": {
          "description": "Unique application Name"
        }
      },
      "templateBaseURL": {
        "type": "string",
        "defaultValue": "https://raw.githubusercontent.com/Cal-CS-61A-Staff/ok/enhancement/icokpy/azure-deploy/azure/paas/",
        "metadata": {
          "description": "Repo base URL"
        }
      }
    },
  "variables": {
    "mySQLServerName": "[concat('okpy',uniquestring(resourceGroup().id))]",
    "appName": "[concat(parameters('appName'),uniquestring(resourceGroup().id))]"
    
  },
    "resources": [
      
      {
        "name": "MySQL",
        "type": "Microsoft.Resources/deployments",
        "apiVersion": "2016-09-01",
        "dependsOn": [
       
  
        ],
        "properties": {
          "mode": "Incremental",
          "templateLink": {
            "uri": "[concat(parameters('templateBaseURL'),'mysql.deploy.json')]",
            "contentVersion": "1.0.0.0"
          },
          "parameters": {
  
            "mySqlUsername": {
              "value": "[parameters('mySqlUsername')]"
            },
  
            "mySqlAdminPassword": {
              "value": "[parameters('mySQlAdminPassword')]"
            },
          
            "mysqlServerName": {
              "value": "[variables('mySQLServerName')]"
            }
          }
        }
  
      },
      {
        "name": "redis",
        "type": "Microsoft.Resources/deployments",
        "apiVersion": "2016-09-01",
        "dependsOn": [
       
  
        ],
        "properties": {
          "mode": "Incremental",
          "templateLink": {
            "uri": "[concat(parameters('templateBaseURL'),'redis.deploy.json')]",
       
            "contentVersion": "1.0.0.0"
          },
          "parameters": {
    
          }
        }
  
      },
      {
        "name": "sendgrid",
        "type": "Microsoft.Resources/deployments",
        "apiVersion": "2016-09-01",
        "dependsOn": [
       
  
        ],
        "properties": {
          "mode": "Incremental",
          "templateLink": {
            "uri": "[concat(parameters('templateBaseURL'),'sendgrid.deploy.json')]",
       
            "contentVersion": "1.0.0.0"
          },
          "parameters": {
            "sendgridAccountName":{
              "value": "[parameters('sendgridAccountName')]"
            },
            "sendgridPassword": {
              "value": "[parameters('sendgridPassword')]"
            }
  
          }
        }
  
      },
      {
        "name": "aci-create-container",
        "type": "Microsoft.Resources/deployments",
        "apiVersion": "2016-09-01",
        "dependsOn": [
       
 
            "[concat('Microsoft.Resources/deployments/', 'storage')]"
  
          ],
        "properties": {
          "mode": "Incremental",
          "templateLink": {
            "uri": "[concat(parameters('templateBaseURL'),'aci-create-container.deploy.json')]",
       
            "contentVersion": "1.0.0.0"
          },
        
          "parameters": {
            "storageContainerName":{
              "value": "okpyfiles"
            },
            "storageAccountName":{

              "value": "[reference('storage').outputs.storageAccountName.value]"
            },
            "storageAccountKey":{

              "value": "[reference('storage').outputs.storageAccountKey.value]"
            }
  
          }
        }
  
      },
      {
        "name": "aci-create-db",
        "type": "Microsoft.Resources/deployments",
        "apiVersion": "2016-09-01",
        "dependsOn": [
       
 
            "[concat('Microsoft.Resources/deployments/', 'mysql')]"
  
          ],
        "properties": {
          "mode": "Incremental",
          "templateLink": {
            "uri": "[concat(parameters('templateBaseURL'),'aci-create-db.deploy.json')]",
       
            "contentVersion": "1.0.0.0"
          },
        
          "parameters": {
           

            "dockerRegistryUrl":{

              "value": "[parameters('dockerRegistryUrl')]"
            },
            "dockerRegistryUsername":{
      
              "value": "[parameters('dockerRegistryUsername')]"
            },
            "dockerRegistryPassword":{
      
              "value": "[parameters('dockerRegistryPassword')]"
            },
            "dockerImageName":{
      
              "value": "[parameters('dockerImageName')]"
            },
            "dockerImageTag":{
      
              "value": "[parameters('dockerImageTag')]"
            },
            "mysqlUsername": {
              "value": "[parameters('mySqlUsername')]"
              
            },
            "mysqlPassword": {
              "value": "[parameters('mySQlAdminPassword')]"
              
            },
            "mySQLServerName": {
              "value": "[variables('mySQLServerName')]"
    
            }

  
          }
        }
  
      },
      {
        "name": "storage",
        "type": "Microsoft.Resources/deployments",
        "apiVersion": "2016-09-01",
        "dependsOn": [
       
  
        ],
        "properties": {
          "mode": "Incremental",
          "templateLink": {
            "uri": "[concat(parameters('templateBaseURL'),'storage.deploy.json')]",
       
            "contentVersion": "1.0.0.0"
          },
          "parameters": {
            "storageAccountType":{
              "value": "Standard_GRS"
            }
  
          }
        }
  
      },
      {
        "name": "AppInsights",
        "type": "Microsoft.Resources/deployments",
        "apiVersion": "2016-09-01",
        "dependsOn": [
       
  
        ],
        "properties": {
          "mode": "Incremental",
          "templateLink": {
            "uri": "[concat(parameters('templateBaseURL'),'application-insights.deploy.json')]",
       
            "contentVersion": "1.0.0.0"
          },
          "parameters": {
            "appName":{
              "value": "[parameters('appName')]"
            }
  
          }
        }
  
      },
      {
        "name": "webapp",
        "type": "Microsoft.Resources/deployments",
        "apiVersion": "2016-09-01",
        "dependsOn": [
       
          "[concat('Microsoft.Resources/deployments/', 'MySQL')]",
          "[concat('Microsoft.Resources/deployments/', 'redis')]",
          "[concat('Microsoft.Resources/deployments/', 'storage')]",
          "[concat('Microsoft.Resources/deployments/', 'sendgrid')]",
          "[concat('Microsoft.Resources/deployments/', 'AppInsights')]",
          "[concat('Microsoft.Resources/deployments/', 'aci-create-container')]"
        ],
        "properties": {
          "mode": "Incremental",
          "templateLink": {
            "uri": "[concat(parameters('templateBaseURL'),'webapp.deploy.json')]",
       
            "contentVersion": "1.0.0.0"
          },
          "parameters": {
            "appName": {
              "value": "[variables('appName')]"
              
            },
            "storageAccountName":{

              "value": "[reference('storage').outputs.storageAccountName.value]"
            },
            "storageAccountKey":{

              "value": "[reference('storage').outputs.storageAccountKey.value]"
            },
            "ok_env": {
              "value": "[parameters('ok_env')]"
            },
            "dockerRegistryUrl":{

              "value": "[parameters('dockerRegistryUrl')]"
            },
            "dockerRegistryUsername":{
      
              "value": "[parameters('dockerRegistryUsername')]"
            },
            "dockerRegistryPassword":{
      
              "value": "[parameters('dockerRegistryPassword')]"
            },
            "dockerImageName":{
      
              "value": "[parameters('dockerImageName')]"
            },
            "dockerImageTag":{
      
              "value": "[parameters('dockerImageTag')]"
            },
            "mysqlUsername": {
              "value": "[parameters('mySqlUsername')]"
              
            },
            "mysqlPassword": {
              "value": "[parameters('mySQlAdminPassword')]"
              
            },
            "mySQLServerName": {
              "value": "[variables('mySQLServerName')]"
    
            },
            "redisFQDN": {
              "value": "[reference('redis').outputs.redis.value.hostName]"
              
          },
          "redisPassword": {
            "value": "[reference('redis').outputs.redis.value.accessKeys.primarykey]"
            
                
            },
            "sendgridSmtpServer": {
              
              "value": "[reference('SendGrid').outputs.SendGrid.value.smtpServer]"
            },

            "sendgridAccountName": {
              
              "value":  "[reference('SendGrid').outputs.SendGrid.value.username]"
            },
            "sendgridPassword": {
              
              "value":  "[parameters('sendgridPassword')]"
            },
            "applicationInsightsKey":{

              "value":  "[reference('AppInsights').outputs.AppInsights.value.InstrumentationKey]"
                
              
            },
            "azureAdAppID":{
              "value":"[parameters('azureAdAppId')]"
          
            },
            "azureAdAppSecret":{
              "value":"[parameters('azureAdAppSecret')]"
                  
            },
            "SecretKey":{
              "value":"[parameters('SecretKey')]"
                  
            }
       
          }
        }
      },
      {
        "name": "worker",
        "type": "Microsoft.Resources/deployments",
        "apiVersion": "2016-09-01",
        "dependsOn": [
       
          "[concat('Microsoft.Resources/deployments/', 'MySQL')]",
          "[concat('Microsoft.Resources/deployments/', 'redis')]",
          "[concat('Microsoft.Resources/deployments/', 'storage')]",
          "[concat('Microsoft.Resources/deployments/', 'sendgrid')]",
          "[concat('Microsoft.Resources/deployments/', 'AppInsights')]",
          "[concat('Microsoft.Resources/deployments/', 'aci-create-container')]"
        ],
        "properties": {
          "mode": "Incremental",
          "templateLink": {
            "uri": "[concat(parameters('templateBaseURL'),'webapp.deploy.json')]",
       
            "contentVersion": "1.0.0.0"
          },
          "parameters": {
            "appName": {
              "value": "[concat(variables('appName'),'-worker')]"
              
            },
            "storageAccountName":{

              "value": "[reference('storage').outputs.storageAccountName.value]"
            },
            "storageAccountKey":{

              "value": "[reference('storage').outputs.storageAccountKey.value]"
            },
            "ok_env": {
              "value": "[parameters('ok_env')]"
            },
            "dockerRegistryUrl":{

              "value": "[parameters('dockerRegistryUrl')]"
            },
            "dockerRegistryUsername":{
      
              "value": "[parameters('dockerRegistryUsername')]"
            },
            "dockerRegistryPassword":{
      
              "value": "[parameters('dockerRegistryPassword')]"
            },
            "dockerImageName":{
      
              "value": "[parameters('dockerImageName')]"
            },
            "dockerImageTag":{
      
              "value": "[parameters('dockerImageTag')]"
            },
            "dockerStartupCommand":{
              "value": "./manage.py worker"  

            },
            "mysqlUsername": {
              "value": "[parameters('mySqlUsername')]"
              
            },
            "mysqlPassword": {
              "value": "[parameters('mySQlAdminPassword')]"
              
            },
            "mySQLServerName": {
              "value": "[variables('mySQLServerName')]"
    
            },
            "redisFQDN": {
              "value": "[reference('redis').outputs.redis.value.hostName]"
              
          },
          "redisPassword": {
            "value": "[reference('redis').outputs.redis.value.accessKeys.primarykey]"
            
                
            },
            "sendgridSmtpServer": {
              
              "value": "[reference('SendGrid').outputs.SendGrid.value.smtpServer]"
            },

            "sendgridAccountName": {
              
              "value":  "[reference('SendGrid').outputs.SendGrid.value.username]"
            },
            "sendgridPassword": {
              
              "value":  "[parameters('sendgridPassword')]"
            },
            "applicationInsightsKey":{

              "value":  "[reference('AppInsights').outputs.AppInsights.value.InstrumentationKey]"
                
              
            },
            "SecretKey":{
              "value":"[parameters('SecretKey')]"
                  
            }
          }
        }
      }
  
    ],
    "outputs": {
     
    }
  }